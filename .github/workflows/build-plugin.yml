name: Build Plugin
on:
    push:
        tags:
            - 'v[0-9]+.[0-9]+.[0-9]+.[0-9]+'

jobs:
    build:
        runs-on: ubuntu-latest
        env:
            DALAMUD_HOME: /tmp/dalamud
        
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: true

            - name: Get Tag Name
              run: echo "tag=$(echo ${{ github.ref }} | sed 's/refs\/tags\/v//')" >> $GITHUB_ENV

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: 9.0.x
    
            - name: Download config.yaml
              run: curl -L https://raw.githubusercontent.com/goatcorp/dalamud-declarative/main/config.yaml -o config.yaml
    
            - name: Install yq
              run: |
                  wget https://github.com/mikefarah/yq/releases/download/v4.34.1/yq_linux_amd64 -O /usr/local/bin/yq
                  chmod +x /usr/local/bin/yq
    
            - name: Extract Latest Track Name
              id: latest_track
              run: |
                  latest_entry=$(yq eval '.tracks | to_entries | sort_by(.value.applicableGameVersion, .key | match("release.*") | . == "" | not) | .[-1]' config.yaml)
                  track_name=$(echo "$latest_entry" | yq eval '.key' -)
                  echo "result=$track_name" >> $GITHUB_OUTPUT
    
            - name: Download Dalamud Latest
              run: |
                  if [ "${{ steps.latest_track.outputs.result }}" == "release" ]; then
                      wget https://goatcorp.github.io/dalamud-distrib/latest.zip -O ${{ env.DALAMUD_HOME }}.zip
                  else
                      wget https://goatcorp.github.io/dalamud-distrib/${{ steps.latest_track.outputs.result }}/latest.zip -O ${{ env.DALAMUD_HOME }}.zip
                  fi
                  unzip ${{ env.DALAMUD_HOME }}.zip -d ${{ env.DALAMUD_HOME }}
    
            - name: Restore
              run: dotnet restore
    
            - name: Build
              run: |
                  dotnet build --no-restore --configuration Release --nologo -p:AssemblyVersion=${{ env.tag }}

            - name: Publish Version
              uses: PunishXIV/dynamis-action@v1
              id: dynamis
              with:
                  plugin_id: 53
                  internal_name: 'NecroLens'
                  version_number: ${{ env.tag }}
                  path: 'NecroLens/bin/x64/Release/NecroLens/latest.zip'
                  type: 'latest'
                  dalamud_version: '12'
              env:
                  PUBLISHER_KEY: ${{ secrets.PUBLISHER_KEY }}
